{
  "name": "horario-no-ponto-api",
  "version": "0.2.3",
  "description": "API que responde o horário onde um õnibus dado esteve mais próximo de um ponto geográfico dado",
  "author": "",
  "license": "MIT",
  "scripts": {
    "build": "tsc -p tsconfig.build.json",
    "format": "prettier --write \"src/**/*.ts\"",
    "start": "ts-node -r tsconfig-paths/register src/main.ts",
    "start:dev": "nodemon",
    "start:debug": "nodemon --config nodemon-debug.json",
    "prestart:prod": "rimraf dist && npm run build",
    "start:prod": "node dist/main.js",
    "lint": "tslint -p tsconfig.json -c tslint.json",
    "test": "jest --coverage",
    "commit": "git-cz",
    "release": "standard-version",
    "mongodb": "docker run --name mongodb-srv -d -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin123 -e MONGO_INITDB_DATABASE=banco -p 8081:8081 -p 27017:27017 -p 27018:27018 -p 27019:27019 mongo",
    "mongodb:persistent": "docker run --name mongodb-srv -d -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin123 -e MONGO_INITDB_DATABASE=banco -v /DOCKER-VOLUMES/mongo:/data/db -v /DOCKER-VOLUMES/mongo/configdb:/data/configdb  -p 27017:27017 mongo",
    "shell:mongodb": "docker exec -i -t mongodb-srv /bin/bash",
    "stop:mongodb": "docker stop mongodb-srv && docker rm mongodb-srv",
    "stop:all": "docker stop $(docker ps -q -a) && docker rm $(docker ps -q -a)"
  },
  "dependencies": {
    "@nestjs/common": "^6.0.0",
    "@nestjs/core": "^6.0.0",
    "@nestjs/mongoose": "^6.0.0",
    "@nestjs/platform-express": "^6.0.0",
    "@nestjs/swagger": "^3.0.2",
    "array-groups": "^0.1.1",
    "geolib": "^2.0.24",
    "mongoose": "^5.4.19",
    "reflect-metadata": "^0.1.12",
    "request": "^2.88.0",
    "request-promise": "^4.2.4",
    "rimraf": "^2.6.2",
    "rxjs": "^6.3.3",
    "swagger-ui-express": "^4.0.2"
  },
  "devDependencies": {
    "@nestjs/testing": "^6.0.0",
    "@types/express": "^4.16.0",
    "@types/jest": "^23.3.13",
    "@types/node": "^10.12.18",
    "@types/supertest": "^2.0.7",
    "commitizen": "^3.0.7",
    "cz-conventional-changelog": "^2.1.0",
    "husky": "^1.3.1",
    "jest": "^23.6.0",
    "jest-cucumber": "^2.0.11",
    "nodemon": "^1.18.9",
    "prettier": "^1.15.3",
    "standard-version": "^5.0.2",
    "supertest": "^3.4.1",
    "ts-jest": "^23.10.5",
    "ts-node": "^7.0.1",
    "tsconfig-paths": "^3.7.0",
    "tslint": "5.12.1",
    "typescript": "^3.2.4",
    "validate-commit-msg": "^2.14.0"
  },
  "jest": {
    "collectCoverageFrom": [
      "**/*.{controller.ts}",
      "!**/node_modules/**"
    ],
    "verbose": true,
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "validate-commit-msg": {
      "types": "conventional-commit-types",
      "helpMessage": "Use \"npm run commit\" instead, we use conventional-changelog format :) (https://github.com/commitizen/cz-cli)"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "validate-commit-msg"
    }
  }
}
